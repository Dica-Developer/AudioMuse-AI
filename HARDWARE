| Issue ID | HW | CONFIGURATION | Supported | Notes |
| :--- | :--- | :--- | :--- | :--- |
| #14 | **CPU:** Ryzen 5600G | Docker Compose, Jellyfin | ✅ Yes | Analysis stuck with single worker. Fixed by explicitly defining multiple workers in `docker-compose.yaml`. A bug where analysis data was blank was fixed in v0.4.0-beta. |
| #24 | **CPU:** Ryzen 5600G | TrueNAS SCALE, Docker Image v0.6.0-beta / v0.6.2-beta | ✅ Yes | Test report. No bugs found, but user provided detailed feedback on playlist quality and algorithm behavior, helping the developer fine-tune the system. |
| #25 | **CPU:** i5 6th gen, i5 8th gen | K3S cluster, Docker Image `:devel` | ✅ Yes | Developer's internal test report. Confirmed successful analysis and clustering with a large library across a distributed cluster. |
| #39 | **CPU:** Ryzen 5 3600 | Bazzite (Fedora Atomic), Docker Image v0.6.4-beta | ✅ Yes | Test report. No bugs found, user provided feedback on playlist quality and size, assisting in algorithm tuning. |
| #48 | Not specified | Docker Compose, Emby 4.8.11.0, PostgreSQL v15 | ✅ Yes | Analysis failed on songs with special characters (e.g., `'`). Resolved by re-creating the PostgreSQL database with **UTF-8** encoding. |
| #49 | Not specified | Podman Quadlet, Docker Image `latest-nvidia` then `:devel`, Jellyfin 10.10.7 | ✅ Yes | Song Path failed with a JSON serialization error. Resolved by a developer fix in the `:devel` branch that converts the `float32` data type to a JSON-serializable format in the backend. |
| #55 | **CPU:** Intel (32c), **GPU:** Nvidia RTX 3060 | Docker Swarm/single docker, Navidrome | ✅ Yes | Analysis failed for high-res FLACs. Developer added fallbacks, but the issue was ultimately a problem with Navidrome's media library indexing, fixed by the user running a full scan in Navidrome. |
| #56 | **CPU:** Intel Celeron CPU N3160 | Docker Compose, Unraid 7.1.4 | ❌ No | Flask app failed with an `Illegal instruction` error. This is a hardware limitation: TensorFlow requires **AVX CPU support**, which the Celeron N3160 lacks. |
| #62 | **CPU:** Intel Xeon W-2125 | Proxmox-VE LXC (Debian), Docker Image v0.6.5-beta | ✅ Yes | Test report. No bugs. User provided feedback and feature requests, helping to improve the clustering algorithm and UI. |
| #65 | **CPU:** N100 | Docker Compose, Navidrome | ❌ No | GitHub authentication for "Collection Sync" failed. The feature was later discontinued due to legal concerns. |
| #66 | **CPU:** E5-2697 | Docker Compose (via Portainer), Navidrome 0.58.0 | ✅ Yes | Worker container failed to start after a reboot due to a `syntax error`. The user fixed it by changing the container's command in Portainer, indicating a deployment-specific issue. |
| #67 | **CPU:** Intel i7-10850H | Arch Linux, Docker Image `latest-nvidia` | ✅ Yes | Test report. No bugs. User provided feedback on clustering results with a small library. |
| #69 | **CPU:** Ryzen 5 PRO 4650G | Ubuntu 24.04.3 LTS, Docker Image v0.6.7-beta | ✅ Yes | Test report. No bugs. User provided extensive feedback on UI, documentation, and the clustering algorithm's performance and output. |
| #73 | **CPU:** Intel core i5 1035G1 | Docker Compose, Jellyfin 10.10.7 | ✅ Yes | Database showed zero tracks after analysis. A bug related to float precision on certain CPUs was fixed by casting to `Float32` in the `:devel` branch. |
| #74 | **CPU:** Amd Ryzen 3600 | Docker Compose, Navidrome v0.58.0 | ✅ Yes | Analysis task stuck in "cleaning registries" loop. The issue was resolved by the user restarting the entire stack and re-running the analysis. A developer fix for database timeouts was also applied in a new version. |
| #93 | **CPU:** AMD Ryzen AI 9 HX 370 w/ Radeon 890M 64bit | Podman with docker-compose (v5.6.1), Jellyfin v10.10.7, AudioMuse-AI v0.6.8-beta | ✅ Yes | Initial issue with too few tracks for clustering. Resolved by analyzing a larger library as recommended. A bug with CPU-specific behavior was fixed in the `:devel` branch. User successfully scaled workers to increase CPU usage. |
